#include <VirtualWire.h>
#include <string.h>
#include <LiquidCrystal.h>
#include <Time.h>


byte message[VW_MAX_MESSAGE_LEN];         
byte messageLength = VW_MAX_MESSAGE_LEN; 
 
//int lcd_key = 0;
//int adc_key_in = 0;
int com_temp = 0;
int ledPin = 10;
LiquidCrystal lcd(8, 9, 4, 5, 6, 7);           // select the pins used on the LCD panel  //핀번호에 문제가 없는가 확인할것.

byte SpecialChar1[8]={
  B00000,
  B01001,
  B01001,
  B10101,
  B10101,
  B10101,
  B00001,
  B00000
};
byte newChar[8] = {
        B01010,
        B01110,
        B01010,
        B01110,
        B11111,
        B00100,
        B01000,
        B01110
};
byte newChar2[8] = {
        B00100,
        B11111,
        B00100,
        B01010,
        B10001,
        B00100,
        B11111,
        B00000
};
byte newChar3[8] = {
        B10001,
        B10111,
        B10001,
        B10111,
        B11101,
        B00001,
        B01000,
        B01111
};
/*byte newChar3[8] = {
        B01000,
        B01111,
        B10010,
        B01111,
        B01010,
        B11111,
        B00010,
        B00010
};*/
byte newChar4[8] = {
        B01111,
        B01001,
        B01111,
        B01001,
        B01111,
        B01001,
        B10011,
        B00000
};
byte newChar5[8] = {
        B01111,
        B01001,
        B01001,
        B01111,
        B01001,
        B01001,
        B01111,
        B00000
};


void setup(){
                 // start the library
  Serial.begin(9600); // 2017.06.14 추가.
  vw_setup(2000);
  vw_set_rx_pin(2);           
  vw_rx_start();              
  pinMode(ledPin, OUTPUT);
  setTime(23,59,59,31,12,2016);
  lcd.begin(16, 2);
  lcd.createChar(0, SpecialChar1);
  lcd.createChar(1, newChar);
  lcd.createChar(2, newChar2);
  lcd.createChar(3, newChar3);
  lcd.createChar(4, newChar4);
  lcd.createChar(5, newChar5);
  //lcd.setCursor(0,0);             // set the LCD cursor   position 
  //lcd.print("Time now");  // print a simple message on the LCD

}

void loop(){
  
  //lcd.setCursor(4,1);   // move cursor to second line "1" and 9 spaces over
  //lcd.backlight();
  if(vw_get_message(message, &messageLength)) {       
    int command = processResponse((char*)message, 1); 
    if (command==2) {
      /*
      switch (command) {
        case 1:                         
          break;
        case 2:                         
          com_temp=com_temp+1;    //LED OFF
          break;
      }*/
      com_temp=com_temp+1;
    }  
  }
  lcd.begin(16, 2);  //2017.06.14 적용시킬것.
  lcd.clear();
  com_temp = com_temp%2;
  //adc_key_in = analogRead(0);
  //lcd_key = 0;
  if(com_temp == 0){
    digitalClockDisplay1();
    digitalClockDisplay2();
  }
  if(com_temp == 1 ) { lcd.print('201211760');}
  
  //lcd.print(millis()/1000);       // display seconds elapsed since power-up
  delay(1000);
  
  //lcd.setCursor(0,1);             // move to the begining of the second line
}


void digitalClockDisplay1(){
  // digital clock display of the time
  lcd.setCursor(0, 0);
  lcd.print(year());
  lcd.write(byte(3));
  lcd.print(month());
  lcd.write(byte(4));
  //lcd.print(
  lcd.print(day());
  lcd.write(byte(5));
}

void digitalClockDisplay2(){
  lcd.setCursor(7, 1);
  lcd.print(hour());
  
  lcd.write(byte(0));

  lcd.print(minute());
  lcd.write(byte(1));
  lcd.print(second());
  lcd.write(byte(2));

}

int processResponse(char* message, int pinCode) {
  char *p = message;
  char *buf;
  int o = 0;
  int pin;
  int command;
  Serial.println(p);
  while ((buf = strtok_r(p, ".", &p)) != NULL)  {  
    if (o == 0) {                                 
      pin = atoi(buf);                            
    } else {
      command = atoi(buf);                        
    }
      o++;
  }

  if (pinCode == pin && command > 0) {               
    return command;
  } else {
    return 0; 
  }
}

